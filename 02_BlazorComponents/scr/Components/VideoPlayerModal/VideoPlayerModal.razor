@inject IJSRuntime jsRuntime


<!-- Button trigger modal -->
<button type="button" class="button-img" data-bs-toggle="modal" 
  data-bs-target="#exampleModal"
  @onclick="OpenModal" >
    Launch demo modal
</button>

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">

        <VideoPlayer @ref=_videoPlayerRef PlayerClass="w-100"
          VideoPath="videos/aoi_soundImplementation.mp4">
        </VideoPlayer>

      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary">Save changes</button>
      </div>
    </div>
  </div>
</div>

@code {

    private VideoPlayer _videoPlayerRef;
    
    private async Task OpenModal()                // Kp ey check hier mal wann wie was subscribed.
    {
        await this.jsRuntime.InvokeVoidAsync("subscribeCloseModal", "exampleModal", 
            DotNetObjectReference.Create(this)
        );

        if (!string.IsNullOrEmpty(_videoPlayerRef.VideoPlayerRef.Id))
        {
            await jsRuntime.InvokeVoidAsync("autoPlayVideo", _videoPlayerRef.VideoPlayerRef.Id);
        }
    }

    [JSInvokable]
    public async Task StopVideo()
    {
        await jsRuntime.InvokeVoidAsync("autoStopVideo", _videoPlayerRef.VideoPlayerRef.Id);
    }



}


