@inject IAudioPlayer player
@inject IJSRuntime jsRuntime
@inject IVideoPlayerNotify _videoPlayerNotify


@if (string.IsNullOrEmpty(VideoPath))
{
  <h3>Your Videopath is null or empty! Pls enter a valid path</h3>
}
else
{
  <video controls class="@PlayerClass"
    id=@VideoPlayerRef.Id
    @ref="VideoPlayerRef"
    @onplay="OnVideoPlay" 
    @onstop="OnVideoPause"
    @onpause="OnVideoPause">
      <source src=@VideoPath type="video/mp4">
      Your browser does not support HTML5 video.
  </video>
}

@code {

  private bool _isPlaying = false;

  public ElementReference VideoPlayerRef { get; private set; }

  [Parameter]
  public string? PlayerClass { get; set; } = string.Empty;

  [Parameter]
  public string? VideoPath { get; set; }


  protected override async Task OnAfterRenderAsync(bool firstRender)
  {
      base.OnAfterRender(firstRender);

      if (firstRender)
      {
          StateHasChanged();
      }
  }

  private void OnVideoPlay()
  {
    _isPlaying = true;

    _videoPlayerNotify.VideoStarted();
  }
  
  private void OnVideoPause()
  {
    if (_isPlaying)
    {
        _isPlaying = false;

        _videoPlayerNotify.VideoStopped();
    }
  }
}



